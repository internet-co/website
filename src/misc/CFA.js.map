{"version":3,"file":"CFA.js","sourceRoot":"","sources":["CFA.ts"],"names":[],"mappings":"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","sourcesContent":["// Context Free Art Javascript\nconst cfa = {\n    canvas: null,\n    stack: [],\n    draws: [],\n    // affine adjustments\n    ajustments: {\n        x(m, v) {\n            m[4] += v * m[0];\n            m[5] += v * m[1];\n        },\n        y(m, v) {\n            m[4] += v * m[2];\n            m[5] += v * m[3];\n        },\n        z(m, v) {\n            m[11] += v;\n        },\n        rotate(m, v) {\n            const rad = Math.PI * v / 180;\n            const cos = Math.cos(rad);\n            const sin = Math.sin(rad);\n            const r00 = cos * m[0] + sin * m[2];\n            const r01 = cos * m[1] + sin * m[3];\n            m[2] = cos * m[2] - sin * m[0];\n            m[3] = cos * m[3] - sin * m[1];\n            m[0] = r00;\n            m[1] = r01;\n        },\n        flip(m, v) {\n            const rad = Math.PI * v / 180;\n            const x = Math.cos(rad);\n            const y = Math.sin(rad);\n            const n = 1 / (x * x + y * y);\n            const b00 = (x * x - y * y) / n;\n            const b01 = 2 * x * y / n;\n            const b10 = 2 * x * y / n;\n            const b11 = (y * y - x * x) / n;\n            const r00 = b00 * m[0] + b01 * m[2];\n            const r01 = b00 * m[1] + b01 * m[3];\n            m[2] = b10 * m[0] + b11 * m[2];\n            m[3] = b10 * m[1] + b11 * m[3];\n            m[0] = r00;\n            m[1] = r01;\n        },\n        skew(m, v) {\n            const x = Math.tan(Math.PI * v[0] / 180);\n            const y = Math.tan(Math.PI * v[1] / 180);\n            const r00 = m[0] + y * m[2];\n            const r01 = m[1] + y * m[3];\n            m[2] = x * m[0] + m[2];\n            m[3] = x * m[1] + m[3];\n            m[0] = r00;\n            m[1] = r01;\n        },\n        scale(m, v) {\n            let x, y;\n            if (Array.isArray(v)) {\n                x = v[0];\n                y = v[1];\n            } else {\n                x = v;\n                y = x;\n            }\n            m[0] *= x;\n            m[1] *= x;\n            m[2] *= y;\n            m[3] *= y;\n        },\n        // colors adjust\n        hue(m, v) {\n            m[6] += v;\n            m[6] %= 360;\n        },\n        sat(m, v) {\n            this.adjustColor(m, v, 7);\n        },\n        bri(m, v) {\n            this.adjustColor(m, v, 8);\n        },\n        alpha(m, v) {\n            this.adjustColor(m, v, 9);\n        },\n        adjustColor(m, v, p) {\n            if (v > 0) {\n                m[p] += v * (1 - m[p]);\n            } else {\n                m[p] += v * m[p];\n            }\n        },\n        raf(m, v) {\n            m[10] = v ? 1 : 0;\n        }\n    },\n    normal(s, e) {\n        let rand = (Math.random() + Math.random() + Math.random() + Math.random() + Math.random() + Math.random()) / 6;\n        return s + rand * (e - s);\n    },\n    random(s, e) {\n        return s + Math.random() * (e - s);\n    },\n    adjust(s, p) {\n        const m = [\n            s[0],  // a00\n            s[1],  // a10\n            s[2],  // a01\n            s[3],  // a11\n            s[4],  // tx\n            s[5],  // ty\n            s[6],  // hue\n            s[7],  // saturation\n            s[8],  // brillance\n            s[9],  // alpha\n            s[10], // z-index\n            s[11], // raf\n            s[12]  // primitive\n        ];\n        for (const c in p) {\n            this.ajustments[c](m, p[c]);\n        }\n        return m;\n    },\n    // primitives\n    setTransform(s) {\n        this.ctx.setTransform(\n            -this.scale * s[0],\n            this.scale * s[1],\n            this.scale * s[2],\n            -this.scale * s[3],\n            this.scale * s[4] + this.offsetX,\n            -this.scale * s[5] + this.offsetY\n        );\n    },\n    CIRCLE(s, p = null) {\n        this.primitive(s, p, 0);\n    },\n    SQUARE(s, p = null) {\n        this.primitive(s, p, 1);\n    },\n    TRIANGLE(s, p = null) {\n        this.primitive(s, p, 2);\n    },\n    primitive(s, p, i) {\n        p && (s = this.adjust(s, p));\n        s[12] = i;\n        this.draws.push(s);\n        this.bbox(s);\n    },\n    0(s) {\n        // CIRCLE\n        this.setTransform(s);\n        this.fillStyle(s);\n        this.ctx.beginPath();\n        this.ctx.arc(0, 0, 0.5, 0, 2 * Math.PI);\n        this.ctx.fill();\n    },\n    1(s) {\n        // SQUARE\n        this.setTransform(s);\n        this.fillStyle(s);\n        this.ctx.fillRect(-0.5, -0.5, 1, 1);\n    },\n    2(s) {\n        // TRIANGLE\n        this.setTransform(s);\n        this.fillStyle(s);\n        this.ctx.beginPath();\n        this.ctx.moveTo(0, 0.577350269);\n        this.ctx.lineTo(-0.5, -0.28867513);\n        this.ctx.lineTo(0.5, -0.28867513);\n        this.ctx.lineTo(0.0, 0.577350269);\n        this.ctx.closePath();\n        this.ctx.fill();\n    },\n    fillStyle(s) {\n        this.ctx.fillStyle = `hsla(${Math.round(s[6])},${Math.round(\n            s[7] * 100\n        )}%,${Math.round(s[8] * 100)}%,${s[9]})`;\n    },\n    bbox(s) {\n        const x = s[4] * this.scale;\n        const y = s[5] * this.scale;\n        if (x < this.rect[0]) this.rect[0] = x;\n        else if (x > this.rect[1]) this.rect[1] = x;\n        if (y < this.rect[2]) this.rect[2] = y;\n        else if (y > this.rect[3]) this.rect[3] = y;\n    },\n    center(s) {\n        const br = this.rect;\n        const scale =\n            Math.min(this.width / (br[1] - br[0]), this.height / (br[3] - br[2])) * s;\n        this.scale *= scale;\n        this.offsetX = this.width * 0.5 - (br[0] + br[1]) * 0.5 * scale;\n        this.offsetY = this.height * 0.5 + (br[3] + br[2]) * 0.5 * scale;\n    },\n    // rendering iterator\n    *render() {\n        let s = 0;\n        for (const draw of this.draws) {\n            this[draw[12]](draw);\n            if (s++ > this.speed && draw[10]) {\n                s = 0;\n                this.speed *= this.acc;\n                yield requestAnimationFrame(_ => this.iter.next());\n            }\n        }\n        yield requestAnimationFrame(_ => this.iter.next());\n    },\n    // call shape\n    rule(name, s, p) {\n        s = this.adjust(s, p);\n        const x = (s[0] * s[0] + s[1] * s[1]) * this.scale;\n        const y = (s[2] * s[2] + s[3] * s[3]) * this.scale;\n        if (x < this.minSize && y < this.minSize) {\n            // too small\n            return;\n        }\n        s[12] = this.shape[name] * 1;\n        this.stack.push(s);\n    },\n    run(code, canvas) {\n\n        this.canvas = canvas;\n\n        // inject code\n        this.shape = {};\n        let k = 3;\n        for (const rule in code) {\n            this.shape[rule] = k;\n            this[k++] = code[rule];\n        }\n        // reset canvas\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.width = this.canvas.width = this.canvas.offsetWidth * 2;\n        this.height = this.canvas.height = this.canvas.offsetHeight * 2;\n        if (code.setup.background) {\n            this.ctx.fillStyle = code.setup.background;\n            this.ctx.fillRect(0, 0, this.width, this.height);\n        }\n        // init setup\n        this.rect = [0, 0, 0, 0];\n        this.stack.length = 0;\n        this.draws.length = 0;\n        this.scale = 100;\n        this.speed = code.setup.speed || 100;\n        this.minSize = code.setup.minSize || 1.0;\n        this.acc = code.setup.acc || 1.0;\n        // push start shape\n        this.rule(code.setup.start, [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], false);\n        // run rules\n        const t1 = performance.now();\n        let iter = 0;\n        do {\n            iter++;\n            const s = this.stack.shift();\n            this[s[12]](s);\n        } while (this.stack.length);\n        const t2 = performance.now();\n        console.log(iter, t2 - t1);\n        // zSorting\n        if (code.setup.zSorting) {\n            this.draws.sort(function(d0, d1) {\n                return d0[11] - d1[11];\n            });\n        }\n        // centering\n        this.center(code.setup.zoom || 1.0);\n        // start rendering loop\n        this.iter && (this.iter.return());\n        this.iter = this.render();\n        this.iter.next();\n    }\n};\n\nexport {cfa};\n\n/*[\"click\", \"touchdown\"].forEach(event => {\n    document.addEventListener(event, e => cfa.run(code), false);\n});*/\n/////////////////////////////////////////////\n// Adapted from a CFDG code:\n// https://www.contextfreeart.org/gallery2/index.html#design/357\n// Love and Peace by strix, July 16th, 2006\n/*const code = {\n    setup: {\n        background: \"#fff\",\n        minSize: 0.2,\n        zoom: 1,\n        speed: 100,\n        acc: 1.02,\n        start: \"INIT\"\n    },\n    INIT(s) {\n        this.rule('SUN', s, {rotate: -Math.random() * 180, bri: 0.2});\n    },\n    SUN(s) {\n        this.rule('CILIA', s);\n        this.rule('SUN', s, {x: 1.2, rotate: 7, scale: 0.97});\n    },\n    CILIA(s) {\n        const r = Math.random() * 1601;\n        let weight = 0;\n        switch (true) {\n            case r <= (weight += 1):\n                this.CIRCLE(s);\n                this.rule('SUN', s, {scale: 1});\n                break;\n            case r <= (weight += 1000):\n                this.rule('O_BLOCK', s);\n                this.rule('CILIA', s, {x: 1.2, scale: 0.97});\n                break;\n            case r <= (weight += 100):\n                this.rule('PEACE', s, {rotate: 90});\n                this.rule('CILIA', s, {x: 1.2, scale: 0.97});\n                break;\n            case r <= (weight += 100):\n                this.rule('PEACE', s, {rotate: 90});\n                this.rule('CILIA', s, {x: 1.2, scale: 0.97, rotate: -5});\n                break;\n            case r <= (weight += 100):\n                this.rule('PEACE', s, {rotate: 90});\n                this.rule('CILIA', s, {x: 1.2, scale: 0.97, rotate: 6});\n                break;\n            case r <= (weight += 100):\n                this.rule('LOVE', s, {rotate: 90});\n                this.rule('CILIA', s, {x: 1.2, scale: 0.97});\n                break;\n            case r <= (weight += 100):\n                this.rule('LOVE', s, {rotate: 90});\n                this.rule('CILIA', s, {x: 1.2, scale: 0.97, rotate: 6});\n                break;\n            case r <= (weight += 100):\n                this.rule('LOVE', s, {rotate: 90});\n                this.rule('CILIA', s, {x: 1.2, scale: 0.97, rotate: -6});\n                break;\n        }\n    },\n    LOVE(s) {\n        this.rule('L_BLOCK', s, {x: 0});\n        this.rule('O_BLOCK', s, {x: 1});\n        this.rule('V_BLOCK', s, {x: 2});\n        this.rule('E_BLOCK', s, {x: 3});\n    },\n    PEACE(s) {\n        this.rule('E_BLOCK', s, {x: 0});\n        this.rule('C_BLOCK', s, {x: -1});\n        this.rule('A_BLOCK', s, {x: -2});\n        this.rule('E_BLOCK', s, {x: -3});\n        this.rule('P_BLOCK', s, {x: -4});\n    },\n    L_BLOCK(s) {\n        this.SQUARE(s, {x: -0.28, scale: [0.25, 1]});\n        this.SQUARE(s, {y: -0.4, scale: [0.8, 0.25]});\n    },\n    O_BLOCK(s) {\n        this.CIRCLE(s, {scale: [0.95, 1]});\n        this.CIRCLE(s, {scale: [0.46, 0.47], bri: 1});\n    },\n    V_BLOCK(s) {\n        this.SQUARE(s, {x: -0.2, y: 0.2, scale:[0.25, 0.6], skew: [-45.5, 0]});\n        this.SQUARE(s, {x: 0.2, y: 0.2, scale:[0.25, 0.6], skew: [45.5, 0]});\n        this.TRIANGLE(s, {y: -0.2, rotate: 180, scale: [0.44, 0.5]});\n    },\n    E_BLOCK(s) {\n        this.SQUARE(s, {x: -0.275, scale:[0.25, 1]});\n        this.SQUARE(s, {y: 0.4, scale:[0.8, 0.2]});\n        this.SQUARE(s, {y: -0.4, scale:[0.8, 0.2]});\n        this.SQUARE(s, {scale:[0.5, 0.2]});\n    },\n    P_BLOCK(s) {\n        this.SQUARE(s, {x: -0.2, scale:[0.25, 1]});\n        this.SQUARE(s, {x: -0.1, y: 0.2, scale:[0.4, 0.6]});\n        this.CIRCLE(s, {x: 0.1, y: 0.2, scale:[0.5, 0.6]});\n        this.CIRCLE(s, {x: 0.01, y: 0.2, scale: 0.22, bri: 1});\n    },\n    A_BLOCK(s) {\n        this.SQUARE(s, {x: -0.2, y: -0.2, scale:[0.3, 0.6], skew:[45.5, 0]});\n        this.SQUARE(s, {x: 0.2, y: -0.2, scale:[0.3, 0.6], skew:[-45.5, 0]});\n        this.TRIANGLE(s, {y: 0.2, scale:[0.44, 0.5]});\n        this.SQUARE(s, {y: -0.25, scale:[0.44, 0.25]});\n        this.TRIANGLE(s, {y: -0.1, scale:[0.2, 0.25], sat: -1, bri: 1});\n    },\n    C_BLOCK(s) {\n        this.CIRCLE(s, {scale:[0.95, 1]});\n        this.CIRCLE(s, {scale:0.5, bri: 1});\n        this.SQUARE(s, {x: 0.25, scale:[0.46, 0.25], bri: 1});\n    }\n};\n\ncfa.run(code);*/"]}