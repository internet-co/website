{"version":3,"file":"Ribbon.js","sourceRoot":"","sources":["Ribbon.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,mCAA8B;AAI9B,MAAM,UAAU;IAQZ;QAEI,IAAI,CAAC,YAAY,GAAG,eAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,GAAG,eAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAGnC,CAAC;CACJ;AAMD,MAAa,MAAO,SAAQ,KAAK,CAAC,aAA0B;IAIxD,YAAY,KAAK;QACb,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;IAC3C,CAAC;IAED,iBAAiB;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,UAAU;QAEN,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QACxC,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC;QAC1C,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;QAE5C,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,GAAG,CAAC;QAChD,IAAI,OAAO,GAAG,CAAC,CAAC;QAEhB,IAAI,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,MAAM;QACF,OAAO,gCAAQ,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,SAAS,EAAC,QAAQ,GAAE,CAAC;IACjE,CAAC;CACJ;AA7BD,wBA6BC","sourcesContent":["import * as React from \"react\";\nimport {random} from \"lodash\";\n\ntype RibbonPoint = [number, number];\n\nclass RibbonFold {\n\n    previousFold:RibbonFold;\n    creaseOffset:number;\n    height:number;\n\n    topLeft:RibbonPoint;\n\n    constructor()\n    {\n        this.creaseOffset = random(0, 200);\n        this.height = random(100, 600);\n\n\n    }\n}\n\nexport interface RibbonProps {\n    ribbonWidth?:number;\n}\n\nexport class Ribbon extends React.PureComponent<RibbonProps> {\n\n    canvasElement;\n\n    constructor(props) {\n        super(props);\n        this.canvasElement = React.createRef();\n    }\n\n    componentDidMount(): void {\n        this.drawRibbon();\n    }\n\n    drawRibbon()\n    {\n        let canvas = this.canvasElement.current;\n        let ctx = canvas.getContext(\"2d\");\n        let cw = canvas.width = window.outerWidth;\n        let ch = canvas.height = window.outerHeight;\n\n        let ribbonWidth = this.props.ribbonWidth || 100;\n        let yCursor = 0;\n\n        let ribbonStart = new RibbonFold();\n    }\n\n    render() {\n        return <canvas ref={this.canvasElement} className=\"ribbon\"/>;\n    }\n}"]}