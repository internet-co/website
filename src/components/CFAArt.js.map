{"version":3,"file":"CFAArt.js","sourceRoot":"","sources":["CFAArt.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAE/B,qDAA8C;AAO9C,MAAa,MAAO,SAAQ,KAAK,CAAC,aAA0B;IAIxD,YAAY,KAAK;QACb,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;IAC3C,CAAC;IAED,WAAW;QAEP,IAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAC7B;YAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAoII;YAEJ,4CAA4C;YAC5C,wBAAwB;SAC3B;IACL,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6GG;IAEH,MAAM;QACF,OAAO,oBAAC,yBAAe,IAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAC9D,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;YAEf,IAAG,SAAS,EACZ;gBACI,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;YAED,OAAO,gCAAQ,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,GAAG,CAAA;QACtE,CAAC,CACa,CAAA;IACtB,CAAC;CACJ;AAvRD,wBAuRC","sourcesContent":["import * as React from \"react\";\nimport {cfa} from \"../misc/CFA\";\nimport TrackVisibility from \"react-on-screen\";\n\nexport interface CFAArtProps {\n    artCode:any;\n    className?:string;\n}\n\nexport class CFAArt extends React.PureComponent<CFAArtProps> {\n\n    canvasElement;\n\n    constructor(props) {\n        super(props);\n\n        this.canvasElement = React.createRef();\n    }\n\n    doRenderArt()\n    {\n        if(this.canvasElement.current)\n        {\n\n\n            /*const code = {\n                setup: {\n                    background: \"#fff\",\n                    minSize: 0.2,\n                    zoom: 1,\n                    speed: 100,\n                    acc: 1.02,\n                    start: \"INIT\"\n                },\n                INIT(s) {\n                    this.rule(\"SUN\", s, {rotate: -Math.random() * 180, bri: 0.2});\n                },\n                SUN(s) {\n                    this.rule(\"CILIA\", s);\n                    this.rule(\"SUN\", s, {x: 1.2, rotate: 7, scale: 0.97});\n                },\n                CILIA(s) {\n                    const r = Math.random() * 1601;\n                    let weight = 0;\n                    switch (true) {\n                        case r <= (weight += 1):\n                            this.CIRCLE(s);\n                            this.rule(\"SUN\", s, {scale: 1});\n                            break;\n                        case r <= (weight += 1000):\n                            this.rule(\"O_BLOCK\", s);\n                            this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97});\n                            break;\n                        case r <= (weight += 100):\n                            this.rule(\"PEACE\", s, {rotate: 90});\n                            this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97});\n                            break;\n                        case r <= (weight += 100):\n                            this.rule(\"PEACE\", s, {rotate: 90});\n                            this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97, rotate: -5});\n                            break;\n                        case r <= (weight += 100):\n                            this.rule(\"PEACE\", s, {rotate: 90});\n                            this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97, rotate: 6});\n                            break;\n                        case r <= (weight += 100):\n                            this.rule(\"LOVE\", s, {rotate: 90});\n                            this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97});\n                            break;\n                        case r <= (weight += 100):\n                            this.rule(\"LOVE\", s, {rotate: 90});\n                            this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97, rotate: 6});\n                            break;\n                        case r <= (weight += 100):\n                            this.rule(\"LOVE\", s, {rotate: 90});\n                            this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97, rotate: -6});\n                            break;\n                    }\n                },\n                LOVE(s) {\n                    this.rule(\"L_BLOCK\", s, {x: 0});\n                    this.rule(\"O_BLOCK\", s, {x: 1});\n                    this.rule(\"V_BLOCK\", s, {x: 2});\n                    this.rule(\"E_BLOCK\", s, {x: 3});\n                },\n                PEACE(s) {\n                    this.rule(\"E_BLOCK\", s, {x: 0});\n                    this.rule(\"C_BLOCK\", s, {x: -1});\n                    this.rule(\"A_BLOCK\", s, {x: -2});\n                    this.rule(\"E_BLOCK\", s, {x: -3});\n                    this.rule(\"P_BLOCK\", s, {x: -4});\n                },\n                L_BLOCK(s) {\n                    this.SQUARE(s, {x: -0.28, scale: [0.25, 1]});\n                    this.SQUARE(s, {y: -0.4, scale: [0.8, 0.25]});\n                },\n                O_BLOCK(s) {\n                    this.CIRCLE(s, {scale: [0.95, 1]});\n                    this.CIRCLE(s, {scale: [0.46, 0.47], bri: 1});\n                },\n                V_BLOCK(s) {\n                    this.SQUARE(s, {x: -0.2, y: 0.2, scale:[0.25, 0.6], skew: [-45.5, 0]});\n                    this.SQUARE(s, {x: 0.2, y: 0.2, scale:[0.25, 0.6], skew: [45.5, 0]});\n                    this.TRIANGLE(s, {y: -0.2, rotate: 180, scale: [0.44, 0.5]});\n                },\n                E_BLOCK(s) {\n                    this.SQUARE(s, {x: -0.275, scale:[0.25, 1]});\n                    this.SQUARE(s, {y: 0.4, scale:[0.8, 0.2]});\n                    this.SQUARE(s, {y: -0.4, scale:[0.8, 0.2]});\n                    this.SQUARE(s, {scale:[0.5, 0.2]});\n                },\n                P_BLOCK(s) {\n                    this.SQUARE(s, {x: -0.2, scale:[0.25, 1]});\n                    this.SQUARE(s, {x: -0.1, y: 0.2, scale:[0.4, 0.6]});\n                    this.CIRCLE(s, {x: 0.1, y: 0.2, scale:[0.5, 0.6]});\n                    this.CIRCLE(s, {x: 0.01, y: 0.2, scale: 0.22, bri: 1});\n                },\n                A_BLOCK(s) {\n                    this.SQUARE(s, {x: -0.2, y: -0.2, scale:[0.3, 0.6], skew:[45.5, 0]});\n                    this.SQUARE(s, {x: 0.2, y: -0.2, scale:[0.3, 0.6], skew:[-45.5, 0]});\n                    this.TRIANGLE(s, {y: 0.2, scale:[0.44, 0.5]});\n                    this.SQUARE(s, {y: -0.25, scale:[0.44, 0.25]});\n                    this.TRIANGLE(s, {y: -0.1, scale:[0.2, 0.25], sat: -1, bri: 1});\n                },\n                C_BLOCK(s) {\n                    this.CIRCLE(s, {scale:[0.95, 1]});\n                    this.CIRCLE(s, {scale:0.5, bri: 1});\n                    this.SQUARE(s, {x: 0.25, scale:[0.46, 0.25], bri: 1});\n                }\n            };\n\n            /*const code = {\n                setup: {\n                    background: \"#fff\",\n                    minSize: 0.02,\n                    zoom: 1,\n                    speed: 4000,\n                    zSorting: true,\n                    start: \"init\"\n                },\n                init(s) {\n                    this.CIRCLE(s, {scale: 3});\n                    this.rule('tree', s);\n                },\n                tree(s) {\n                    const r = Math.random() * 22;\n                    switch (true) {\n                        case r <= 2:\n                            this.CIRCLE(s, {scale: 3});\n                            this.rule('tree', s, {scale: 0.5, rotate: 90, y: 0.995, bri: 0.07, z:-1});\n                            this.rule('tree', s, {scale: 0.9, rotate: 90, y: 0.995, bri: 0.07, z:-1});\n                            break;\n                        default:\n                            this.SQUARE(s, {scale: 2});\n                            this.rule('tree', s, {scale: 0.997, y: 0.9});\n                    }\n                }\n            };*/\n\n            //cfa.run(code, this.canvasElement.current);\n            //console.log(\"render\");\n        }\n    }\n\n    /*componentDidMount(): void {\n        let element = ReactDOM.findDOMNode(this);\n        const code = {\n            setup: {\n                background: \"#fff\",\n                minSize: 0.2,\n                zoom: 1,\n                speed: 100,\n                acc: 1.02,\n                start: \"INIT\"\n            },\n            INIT(s) {\n                this.rule(\"SUN\", s, {rotate: -Math.random() * 180, bri: 0.2});\n            },\n            SUN(s) {\n                this.rule(\"CILIA\", s);\n                this.rule(\"SUN\", s, {x: 1.2, rotate: 7, scale: 0.97});\n            },\n            CILIA(s) {\n                const r = Math.random() * 1601;\n                let weight = 0;\n                switch (true) {\n                    case r <= (weight += 1):\n                        this.CIRCLE(s);\n                        this.rule(\"SUN\", s, {scale: 1});\n                        break;\n                    case r <= (weight += 1000):\n                        this.rule(\"O_BLOCK\", s);\n                        this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97});\n                        break;\n                    case r <= (weight += 100):\n                        this.rule(\"PEACE\", s, {rotate: 90});\n                        this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97});\n                        break;\n                    case r <= (weight += 100):\n                        this.rule(\"PEACE\", s, {rotate: 90});\n                        this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97, rotate: -5});\n                        break;\n                    case r <= (weight += 100):\n                        this.rule(\"PEACE\", s, {rotate: 90});\n                        this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97, rotate: 6});\n                        break;\n                    case r <= (weight += 100):\n                        this.rule(\"LOVE\", s, {rotate: 90});\n                        this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97});\n                        break;\n                    case r <= (weight += 100):\n                        this.rule(\"LOVE\", s, {rotate: 90});\n                        this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97, rotate: 6});\n                        break;\n                    case r <= (weight += 100):\n                        this.rule(\"LOVE\", s, {rotate: 90});\n                        this.rule(\"CILIA\", s, {x: 1.2, scale: 0.97, rotate: -6});\n                        break;\n                }\n            },\n            LOVE(s) {\n                this.rule(\"L_BLOCK\", s, {x: 0});\n                this.rule(\"O_BLOCK\", s, {x: 1});\n                this.rule(\"V_BLOCK\", s, {x: 2});\n                this.rule(\"E_BLOCK\", s, {x: 3});\n            },\n            PEACE(s) {\n                this.rule(\"E_BLOCK\", s, {x: 0});\n                this.rule(\"C_BLOCK\", s, {x: -1});\n                this.rule(\"A_BLOCK\", s, {x: -2});\n                this.rule(\"E_BLOCK\", s, {x: -3});\n                this.rule(\"P_BLOCK\", s, {x: -4});\n            },\n            L_BLOCK(s) {\n                this.SQUARE(s, {x: -0.28, scale: [0.25, 1]});\n                this.SQUARE(s, {y: -0.4, scale: [0.8, 0.25]});\n            },\n            O_BLOCK(s) {\n                this.CIRCLE(s, {scale: [0.95, 1]});\n                this.CIRCLE(s, {scale: [0.46, 0.47], bri: 1});\n            },\n            V_BLOCK(s) {\n                this.SQUARE(s, {x: -0.2, y: 0.2, scale:[0.25, 0.6], skew: [-45.5, 0]});\n                this.SQUARE(s, {x: 0.2, y: 0.2, scale:[0.25, 0.6], skew: [45.5, 0]});\n                this.TRIANGLE(s, {y: -0.2, rotate: 180, scale: [0.44, 0.5]});\n            },\n            E_BLOCK(s) {\n                this.SQUARE(s, {x: -0.275, scale:[0.25, 1]});\n                this.SQUARE(s, {y: 0.4, scale:[0.8, 0.2]});\n                this.SQUARE(s, {y: -0.4, scale:[0.8, 0.2]});\n                this.SQUARE(s, {scale:[0.5, 0.2]});\n            },\n            P_BLOCK(s) {\n                this.SQUARE(s, {x: -0.2, scale:[0.25, 1]});\n                this.SQUARE(s, {x: -0.1, y: 0.2, scale:[0.4, 0.6]});\n                this.CIRCLE(s, {x: 0.1, y: 0.2, scale:[0.5, 0.6]});\n                this.CIRCLE(s, {x: 0.01, y: 0.2, scale: 0.22, bri: 1});\n            },\n            A_BLOCK(s) {\n                this.SQUARE(s, {x: -0.2, y: -0.2, scale:[0.3, 0.6], skew:[45.5, 0]});\n                this.SQUARE(s, {x: 0.2, y: -0.2, scale:[0.3, 0.6], skew:[-45.5, 0]});\n                this.TRIANGLE(s, {y: 0.2, scale:[0.44, 0.5]});\n                this.SQUARE(s, {y: -0.25, scale:[0.44, 0.25]});\n                this.TRIANGLE(s, {y: -0.1, scale:[0.2, 0.25], sat: -1, bri: 1});\n            },\n            C_BLOCK(s) {\n                this.CIRCLE(s, {scale:[0.95, 1]});\n                this.CIRCLE(s, {scale:0.5, bri: 1});\n                this.SQUARE(s, {x: 0.25, scale:[0.46, 0.25], bri: 1});\n            }\n        };\n\n        cfa.run(code, element);\n    }*/\n\n    render() {\n        return <TrackVisibility once={true} className={this.props.className}>\n            {({ isVisible }) => {\n\n                if(isVisible)\n                {\n                    this.doRenderArt();\n                }\n\n                return <canvas ref={this.canvasElement} width={650} height={650}/>\n            }}\n        </TrackVisibility>\n    }\n}"]}